# .github/workflows/ci-cd.yml
name: CI/CD for Trading Bot

on:
  push:
    branches:
      - main  # Run workflow on pushes to main branch
  pull_request:
    branches:
      - main  # Run workflow for pull requests targeting main

jobs:
  # Job to install dependencies and run tests
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Tests
        run: |
          pytest --disable-warnings

  # Job to deploy code if tests pass
  deploy:
    runs-on: ubuntu-latest
    needs: test  # Only runs if the test job succeeds
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Deploy Application
        env:
          DHAN_API_KEY: ${{ secrets.DHAN_API_KEY }}
          DHAN_SECRET_KEY: ${{ secrets.DHAN_SECRET_KEY }}
          CHATGPT_API_KEY: ${{ secrets.CHATGPT_API_KEY }}
          TELEGRAM_BOT_API_KEY: ${{ secrets.TELEGRAM_BOT_API_KEY }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          WEATHER_API_KEY: ${{ secrets.WEATHER_API_KEY }}
          WEATHER_API_ENDPOINT: ${{ secrets.WEATHER_API_ENDPOINT }}
          NEWS_API_KEY: ${{ secrets.NEWS_API_KEY }}
          NEWS_API_ENDPOINT: ${{ secrets.NEWS_API_ENDPOINT }}
        run: |
          # Deploy command or script here
          echo "Starting deployment..."
          # Example deployment commands
          # python deploy.py --env production
          # ./scripts/deploy.sh
          echo "Deployment completed."
